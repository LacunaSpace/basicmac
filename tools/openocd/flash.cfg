proc flash_binary { filename } {
    init
    reset init
    halt
    flash write_image erase unlock $filename 0x08000000
    sleep 100
    reset run
    shutdown
}

proc flash_fw { firmware } {
    init
    reset init
    halt
    flash write_image erase unlock $firmware 0x08003000
    sleep 100
    reset run
    shutdown
}

proc flash_up { update } {
    set size [file size $update]
    set addr [expr [expr 0x08020000 - $size] & 0xFFFFFF80]
    init
    reset init
    halt
    flash write_image erase unlock $update $addr
    puts "update start address: 0x[format %08X $addr]"
    puts "gdb: call set_update(0x[format %08X $addr])"
    sleep 100
    reset run
    shutdown
}

proc flash_ihex { ihex } {
    init
    reset init
    halt
    flash write_image erase unlock $ihex
    sleep 100
    reset run
    shutdown
}

proc flash_info { } {
    init
    reset init
    halt
    flash info 0
    shutdown
}

proc restart_target { } {
    init
    reset init
    halt
    sleep 10
    reset run
    shutdown
}

proc memdump { addr len } {
    init
    reset init
    halt
    mdb $addr $len
    #mem2array m 8 $addr $len
    shutdown
}

proc option_bytes { } {
    init
    reset init
    halt
    read_option_bytes 0
    shutdown
}

proc flash_lock { } {
    init
    reset init
    halt
    stm32lx lock 0
    shutdown
}

proc flash_unlock { } {
    init
    reset init
    halt
    stm32lx unlock 0
    shutdown
}
